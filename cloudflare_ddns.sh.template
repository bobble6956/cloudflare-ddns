#!/bin/sh
set -eu

# API URL
api_url='https://api.cloudflare.com/client/v4'

# Configuration (use environment variables)
domain=${CLOUDFLARE_DOMAIN:-your_domain}
zone=${CLOUDFLARE_ZONE:-your_second&TLD_domain}
email=${CLOUDFLARE_EMAIL:-your_email_address}
api_key=${CLOUDFLARE_API_KEY:-your_api_key}

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
}

# Check for required commands
for cmd in curl jq; do
    if ! command -v $cmd &> /dev/null; then
        log "Error: $cmd is not installed."
        exit 1
    fi
done

# Fetch current public IP
public_ip=$(curl -s https://icanhazip.com)
log "Public IP: $public_ip"

# Fetch current DNS record IP
current_ip=$(curl -s "$api_url/zones/$zone_id/dns_records?type=A&name=$domain" \
                  -H "Authorization: Bearer $api_key" \
                  -H "Content-Type: application/json" \
                  | jq -r '.result[0].content')
log "Current DNS IP: $current_ip"

# Get Zone ID
zone_id=$(curl -sX GET "$api_url/zones" \
               -H "Authorization: Bearer $api_key" \
               -H "Content-Type: application/json" \
               | jq -r '.result[] | select (.name | contains("'$zone'"))' | jq -r .id)
log "Zone ID: $zone_id"

# Get Record ID
record_id=$(curl -sX GET "$api_url/zones/$zone_id/dns_records?type=A&name=$domain&direction=desc&match=all" \
                 -H "Authorization: Bearer $api_key" \
                 -H "Content-Type: application/json" \
                 | jq -r '.result[] | select (.name | contains("'$domain'"))' | jq -r .id)
log "Record ID: $record_id"

# Update DNS record if IP has changed
if [ "$public_ip" == "$current_ip" ]; then
    log "IP address unchanged. No update needed."
else
    log "Updating DNS record..."
    response=$(curl -sX PUT "$api_url/zones/$zone_id/dns_records/$record_id" \
                    -H "Authorization: Bearer $api_key" \
                    -H "Content-Type: application/json" \
                    --data '{"type":"A","name":"'$domain'","content":"'$public_ip'","ttl":1,"proxied":false}' \
                    | jq -r .result.content)
    log "DNS record updated successfully. New IP: $response"
fi
